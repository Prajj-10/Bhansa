Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"NONE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"bf33b20f-9bb0-49da-9eb9-3fc611fe96ce\" name=\"Changes\" comment=\"update user profile data\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cook_book/lib/app/EditProfile/editProfile.dart\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cook_book/lib/app/EditProfile/editProfile.dart\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cook_book/lib/app/MyProfile/myProfile.dart\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cook_book/lib/app/MyProfile/myProfile.dart\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cook_book/lib/app/MyProfile/profileDetail.dart\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cook_book/lib/app/MyProfile/profileDetail.dart\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Dart File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2IZ6nSm46fEVSGgD3jENxp6gxba\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.cidr.known.project.marker\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"android.sdk.path\" value=\"$USER_HOME$/AppData/Local/Android/Sdk\" />\r\n    <property name=\"cidr.known.project.marker\" value=\"true\" />\r\n    <property name=\"dart.analysis.tool.window.visible\" value=\"false\" />\r\n    <property name=\"io.flutter.reload.alreadyRun\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/../../Practical/crud_test\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Project\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.0\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.0\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"advanced.settings\" />\r\n    <property name=\"show.migrate.to.gradle.popup\" value=\"false\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\L5\\Assignment\\Mobile Application\\Assignment-2\\Cook Book Codes\\cook_book\\assets\" />\r\n      <recent name=\"E:\\College\\L5-2\\Mobile app development\\Final Assignment\\Cook-Book\\cook_book\\lib\\app\" />\r\n      <recent name=\"E:\\College\\L5-2\\Mobile app development\\Final Assignment\\Cook-Book\\cook_book\\lib\\custom\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"E:\\College\\L5-2\\Mobile app development\\Final Assignment\\Cook-Book\\cook_book\\lib\\app\\EditProfile\" />\r\n      <recent name=\"E:\\College\\L5-2\\Mobile app development\\Final Assignment\\Cook-Book\\cook_book\\lib\\app\" />\r\n      <recent name=\"E:\\College\\L5-2\\Mobile app development\\Final Assignment\\Cook-Book\\cook_book\\lib\\custom\\CustomGridView\" />\r\n      <recent name=\"E:\\College\\L5-2\\Mobile app development\\Final Assignment\\Cook-Book\\cook_book\\lib\\custom\\CustomListView\" />\r\n      <recent name=\"E:\\College\\L5-2\\Mobile app development\\Final Assignment\\Cook-Book\\cook_book\\lib\\custom\\CustomButtons\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main.dart\" type=\"FlutterRunConfigurationType\" factoryName=\"Flutter\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"filePath\" value=\"$PROJECT_DIR$/cook_book/lib/main.dart\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Flutter.main.dart\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"bf33b20f-9bb0-49da-9eb9-3fc611fe96ce\" name=\"Changes\" comment=\"\" />\r\n      <created>1670376927039</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1670376927039</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"login auth\">\r\n      <created>1670391856248</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670391856248</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"login auth\">\r\n      <created>1671172105475</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1671172105475</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"login auth\">\r\n      <created>1671172119265</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1671172119265</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"2\">\r\n      <created>1671173152896</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1671173152896</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"authentication\">\r\n      <created>1671173399597</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1671173399597</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"added myprofile and edit profile page\">\r\n      <created>1671175728094</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1671175728094</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"updated myprofile and edit profile page\">\r\n      <created>1671175909398</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1671175909398</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"added update button\">\r\n      <created>1671996403692</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1671996403692</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"get user profile data\">\r\n      <created>1672230980355</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672230980355</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"update user profile data\">\r\n      <created>1672236734025</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672236734025</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"update user profile data\">\r\n      <created>1672237630937</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672237630937</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"12\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"login auth\" />\r\n    <MESSAGE value=\"2\" />\r\n    <MESSAGE value=\"authentication\" />\r\n    <MESSAGE value=\"added myprofile and edit profile page\" />\r\n    <MESSAGE value=\"updated myprofile and edit profile page\" />\r\n    <MESSAGE value=\"added update button\" />\r\n    <MESSAGE value=\"get user profile data\" />\r\n    <MESSAGE value=\"update user profile data\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"update user profile data\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 5015588603951ebfa4cdaac6d4a02d6477ad179d)
+++ b/.idea/workspace.xml	(date 1672384298277)
@@ -4,11 +4,13 @@
     <option name="autoReloadType" value="NONE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="bf33b20f-9bb0-49da-9eb9-3fc611fe96ce" name="Changes" comment="update user profile data">
+    <list default="true" id="bf33b20f-9bb0-49da-9eb9-3fc611fe96ce" name="Changes" comment="display profile picture and user data">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/cook_book/lib/app/EditProfile/editProfile.dart" beforeDir="false" afterPath="$PROJECT_DIR$/cook_book/lib/app/EditProfile/editProfile.dart" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/cook_book/lib/app/MyProfile/myProfile.dart" beforeDir="false" afterPath="$PROJECT_DIR$/cook_book/lib/app/MyProfile/myProfile.dart" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/cook_book/lib/app/MyProfile/profileDetail.dart" beforeDir="false" afterPath="$PROJECT_DIR$/cook_book/lib/app/MyProfile/profileDetail.dart" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/cook_book/lib/app/PostRecipe/cookingSteps_model.dart" beforeDir="false" afterPath="$PROJECT_DIR$/cook_book/lib/model/cookingSteps_model.dart" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/cook_book/lib/app/PostRecipe/post_recipe.dart" beforeDir="false" afterPath="$PROJECT_DIR$/cook_book/lib/app/PostRecipe/post_recipe.dart" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/cook_book/lib/custom/CustomListView/recipeListView.dart" beforeDir="false" afterPath="$PROJECT_DIR$/cook_book/lib/custom/CustomListView/recipeListView.dart" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -50,7 +52,7 @@
     <property name="cidr.known.project.marker" value="true" />
     <property name="dart.analysis.tool.window.visible" value="false" />
     <property name="io.flutter.reload.alreadyRun" value="true" />
-    <property name="last_opened_file_path" value="$PROJECT_DIR$/../../Practical/crud_test" />
+    <property name="last_opened_file_path" value="$PROJECT_DIR$/../../Practical/NewsAPI" />
     <property name="project.structure.last.edited" value="Project" />
     <property name="project.structure.proportion" value="0.0" />
     <property name="project.structure.side.proportion" value="0.0" />
@@ -64,11 +66,11 @@
       <recent name="E:\College\L5-2\Mobile app development\Final Assignment\Cook-Book\cook_book\lib\custom" />
     </key>
     <key name="MoveFile.RECENT_KEYS">
+      <recent name="E:\College\L5-2\Mobile app development\Final Assignment\Cook-Book\cook_book\lib\model" />
       <recent name="E:\College\L5-2\Mobile app development\Final Assignment\Cook-Book\cook_book\lib\app\EditProfile" />
       <recent name="E:\College\L5-2\Mobile app development\Final Assignment\Cook-Book\cook_book\lib\app" />
       <recent name="E:\College\L5-2\Mobile app development\Final Assignment\Cook-Book\cook_book\lib\custom\CustomGridView" />
       <recent name="E:\College\L5-2\Mobile app development\Final Assignment\Cook-Book\cook_book\lib\custom\CustomListView" />
-      <recent name="E:\College\L5-2\Mobile app development\Final Assignment\Cook-Book\cook_book\lib\custom\CustomButtons" />
     </key>
   </component>
   <component name="RunManager">
@@ -168,7 +170,14 @@
       <option name="project" value="LOCAL" />
       <updated>1672237630937</updated>
     </task>
-    <option name="localTasksCounter" value="12" />
+    <task id="LOCAL-00012" summary="display profile picture and user data">
+      <created>1672254581380</created>
+      <option name="number" value="00012" />
+      <option name="presentableId" value="LOCAL-00012" />
+      <option name="project" value="LOCAL" />
+      <updated>1672254581380</updated>
+    </task>
+    <option name="localTasksCounter" value="13" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -191,6 +200,7 @@
     <MESSAGE value="added update button" />
     <MESSAGE value="get user profile data" />
     <MESSAGE value="update user profile data" />
-    <option name="LAST_COMMIT_MESSAGE" value="update user profile data" />
+    <MESSAGE value="display profile picture and user data" />
+    <option name="LAST_COMMIT_MESSAGE" value="display profile picture and user data" />
   </component>
 </project>
\ No newline at end of file
Index: cook_book/lib/app/PostRecipe/post_recipe.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'dart:io';\r\nimport 'package:cloud_firestore/cloud_firestore.dart';\r\nimport 'package:firebase_auth/firebase_auth.dart';\r\nimport 'package:image_picker/image_picker.dart';\r\nimport 'package:firebase_storage/firebase_storage.dart';\r\nimport 'package:cook_book/main.dart';\r\nimport 'package:duration_picker/duration_picker.dart';\r\n\r\nimport '../../model/user_model.dart';\r\nimport 'storage_services.dart';\r\n\r\n\r\nimport 'package:flutter/material.dart';\r\nimport 'package:snippet_coder_utils/FormHelper.dart';\r\nimport 'package:file_picker/file_picker.dart';\r\n\r\nimport 'cookingSteps_model.dart';\r\n\r\nclass PostRecipe extends StatefulWidget {\r\n  const PostRecipe({Key? key}) : super(key: key);\r\n\r\n  @override\r\n  State<PostRecipe> createState() => _PostRecipeState();\r\n}\r\n\r\nclass _PostRecipeState extends State<PostRecipe> {\r\n\r\n  //int currentStep = 0;\r\n  CollectionReference recipeDetails = FirebaseFirestore.instance.collection('recipe_details');\r\n\r\n  String? ingredients, recipe_title;\r\n\r\n  int? num_of_servings;\r\n\r\n  //var image_url = \"\";\r\n\r\n  //var selectedDuration;\r\n\r\n  //String selectedDuration = \"\";\r\n  //String? selectedDuration;\r\n\r\n\r\n  GlobalKey<FormState> globalKey = new GlobalKey<FormState>();\r\n  CookingStepsModel steps_model = CookingStepsModel();\r\n\r\n  final user = FirebaseAuth.instance.currentUser;\r\n\r\n  UserModel loggedInUser = UserModel();\r\n\r\n\r\n  Duration _duration = const Duration(hours: 0, minutes: 0);\r\n  //var cook_time;\r\n  //Duration selectedDuration = const Duration(hours: 0, minutes: 0);\r\n\r\n\r\n  //To display selected image in UI\r\n  var file;\r\n\r\n\r\n\r\n\r\n  @override\r\n  void initState(){\r\n\r\n    super.initState();\r\n\r\n    steps_model.cooking_steps = new List<String>.empty(growable: true);\r\n    steps_model.cooking_steps!.add(\"\");\r\n\r\n    steps_model.recipe_ingredients = new List<String>.empty(growable: true);\r\n    steps_model.recipe_ingredients!.add(\"\");\r\n\r\n    //Fluttertoast.showToast(msg: \"Logged In successfully.\");\r\n    FirebaseFirestore.instance\r\n        .collection(\"users\")\r\n        .doc(user!.uid)\r\n        .get()\r\n        .then((value) {\r\n      this.loggedInUser = UserModel.fromMap(value.data());\r\n      setState(() {});\r\n    });\r\n  }\r\n\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n\r\n    var width = MediaQuery.of(context).size.width;\r\n    var height = MediaQuery.of(context).size.height;\r\n\r\n    final Storage storage = Storage();\r\n\r\n    return Scaffold(\r\n      //backgroundColor: Colors.black,\r\n      /*appBar: AppBar(\r\n        title: const Text(\"Post Your Recipe\"),\r\n        centerTitle: true,\r\n      ),*/\r\n\r\n      body: SingleChildScrollView(\r\n        child: Column(\r\n\r\n          children: [\r\n            const SizedBox(\r\n              height: 50,\r\n            ),\r\n            //First Image\r\n            Stack(\r\n              children: [\r\n                Container(\r\n                child: file != null ?\r\n                Image.file(\r\n                    file!,\r\n                    height: height/2.2,\r\n                    width: width,\r\n                    fit: BoxFit.cover,)\r\n                    : Container(\r\n                  height: height/2.2,\r\n                  width: width,\r\n                  //color: Colors.white,\r\n                  decoration: const BoxDecoration(\r\n\r\n                    image: DecorationImage(\r\n\r\n                      image: AssetImage(\"assets/Camera.png\"),\r\n                      fit: BoxFit.cover,\r\n                    ),\r\n\r\n                    color: Colors.white,\r\n                    borderRadius: BorderRadius.only(\r\n                      bottomLeft: Radius.circular(25),\r\n                      bottomRight: Radius.circular(25),\r\n                    ),\r\n                  ),\r\n                ),\r\n              ),\r\n                Positioned(\r\n                  top: 160,\r\n                  left: 160,\r\n                  child: Container(\r\n\r\n                        child: IconButton(\r\n\r\n                          color: Colors.black,\r\n                          icon: const Icon(Icons.file_upload, size: 50,),\r\n\r\n                          onPressed: () { uploadImage(); },\r\n                          \r\n                        ),\r\n\r\n\r\n\r\n                  ),\r\n                ),\r\n\r\n              ]\r\n            ),\r\n\r\n            /*Container(\r\n              height: height/2.2,\r\n              width: width,\r\n              decoration: const BoxDecoration(\r\n\r\n                image: DecorationImage(\r\n\r\n                  image: AssetImage(\"assets/postRecipe.jpg\"),\r\n                  fit: BoxFit.cover,\r\n                ),\r\n\r\n                color: Colors.white,\r\n                borderRadius: BorderRadius.only(\r\n                  bottomLeft: Radius.circular(25),\r\n                  bottomRight: Radius.circular(25),\r\n                ),\r\n              ),\r\n            ),*/\r\n\r\n            const SizedBox(\r\n              height: 30,\r\n            ),\r\n\r\n            const Align(\r\n              alignment: Alignment.center,\r\n              child: Text(\r\n                \"Recipe Details\",\r\n                style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold, color: Colors.white),\r\n              ),\r\n            ),\r\n\r\n            Padding(\r\n              padding: const EdgeInsets.only(left: 15, right: 15),\r\n              child: Container(\r\n\r\n                child: Column(\r\n                  children: [\r\n                    const SizedBox(\r\n                      height: 30,\r\n                    ),\r\n\r\n                    const Align(\r\n                      alignment: Alignment.bottomLeft,\r\n                      child: Text(\r\n                        \"Recipe Title: \",\r\n                        style: TextStyle(fontSize: 20, fontWeight: FontWeight.normal, color: Colors.white),\r\n                      ),\r\n                    ),\r\n\r\n                    const SizedBox(\r\n                      height: 10,\r\n                    ),\r\n\r\n                    Container(\r\n                      height: 50,\r\n                      child:  TextField(\r\n\r\n                        onChanged: (value){\r\n                          steps_model.recipe_title = value;\r\n                        },\r\n\r\n\r\n\r\n                        style: TextStyle(fontSize: 20, color: Colors.white),\r\n\r\n                        decoration: InputDecoration(\r\n                          enabledBorder: OutlineInputBorder(\r\n                            borderSide: BorderSide(\r\n                              width: 2,\r\n                              color: Colors.white,\r\n                            ),\r\n                          ),\r\n\r\n                          focusedBorder: OutlineInputBorder(\r\n                            borderSide: BorderSide(color: Colors.white),\r\n                          ),\r\n                        ),\r\n                      ),\r\n                    ),\r\n\r\n                    const SizedBox(\r\n                      height: 20,\r\n                    ),\r\n\r\n                    const Align(\r\n                      alignment: Alignment.bottomLeft,\r\n                      child: Text(\r\n                        \"Number of Servings: \",\r\n                        style: TextStyle(fontSize: 20, fontWeight: FontWeight.normal, color: Colors.white),\r\n                      ),\r\n                    ),\r\n\r\n                    const SizedBox(\r\n                      height: 10,\r\n                    ),\r\n\r\n                    Align(\r\n                      alignment: Alignment.bottomLeft,\r\n                      child: Container(\r\n                        height: 50,\r\n                        width: 180,\r\n                        child: TextField(\r\n\r\n                          keyboardType: TextInputType.number,\r\n\r\n                          onChanged: (value){\r\n                            steps_model.num_of_servings = int.parse(value);\r\n                            //num_of_servings = value;\r\n                          },\r\n\r\n                          style: TextStyle(fontSize: 20, color: Colors.white),\r\n\r\n                          decoration: InputDecoration(\r\n\r\n                            enabledBorder: OutlineInputBorder(\r\n                              borderSide: BorderSide(\r\n                                width: 2,\r\n                                color: Colors.white,\r\n                              ),\r\n                            ),\r\n\r\n                            focusedBorder: OutlineInputBorder(\r\n                              borderSide: BorderSide(color: Colors.white),\r\n                            ),\r\n                          ),\r\n                        ),\r\n                      ),\r\n                    ),\r\n\r\n                   /* const SizedBox(\r\n                      height: 20,\r\n                    ),*/\r\n\r\n                    /*const Align(\r\n                      alignment: Alignment.bottomLeft,\r\n                      child: Text(\r\n                        \"Ingredients: \",\r\n                        style: TextStyle(fontSize: 20, fontWeight: FontWeight.normal, color: Colors.white),\r\n                      ),\r\n                    ),*/\r\n\r\n                    const SizedBox(\r\n                      height: 10,\r\n                    ),\r\n\r\n                    /*Container(\r\n                      height: 50,\r\n                      child:  TextField(\r\n\r\n                        onChanged: (value){\r\n                          steps_model.recipe_ingredients = value;\r\n                        },\r\n\r\n                        style: TextStyle(fontSize: 20, color: Colors.white),\r\n\r\n                        decoration: InputDecoration(\r\n                          enabledBorder: OutlineInputBorder(\r\n                            borderSide: BorderSide(\r\n                              width: 2,\r\n                              color: Colors.white,\r\n                            ),\r\n                          ),\r\n\r\n                          focusedBorder: OutlineInputBorder(\r\n                            borderSide: BorderSide(color: Colors.white),\r\n                          ),\r\n                        ),\r\n                      ),\r\n                    ),*/\r\n\r\n                    const SizedBox(\r\n                      height: 20,\r\n                    ),\r\n\r\n                    /*DurationPicker(\r\n                        onChange: (val) {\r\n                          _duration = val;\r\n                          setState(() {\r\n\r\n                          });\r\n                      },\r\n                      duration: _duration,\r\n                      baseUnit: BaseUnit.minute,\r\n                    ),*/\r\n\r\n                    Container(\r\n                      child: Row(\r\n                        children: [\r\n                          const Text(\r\n                            \"Prepare Duration: \",\r\n                            style: TextStyle(fontSize: 20, color: Colors.white),\r\n                          ),\r\n                          const SizedBox(\r\n                            width: 15,\r\n                          ),\r\n\r\n                          IconButton(\r\n\r\n                            color: Colors.white,\r\n                            icon: const Icon(Icons.timer, size: 35,),\r\n\r\n                            onPressed: () async {\r\n\r\n\r\n\r\n                              Duration? selectedDuration = await showDurationPicker(context: context, initialTime: const Duration(minutes: 0));\r\n\r\n                              ScaffoldMessenger.of(context).showSnackBar(\r\n                                SnackBar(content: Text('Preparing Duration is: $selectedDuration')),\r\n                              );\r\n\r\n                              setState(() {\r\n                                steps_model.prepare_duration = selectedDuration.toString();\r\n                              });\r\n\r\n\r\n\r\n                            },\r\n\r\n\r\n                          ),\r\n\r\n                        ],\r\n                      ),\r\n                    ),\r\n\r\n                    SizedBox(\r\n                      height: 25,\r\n                    ),\r\n\r\n\r\n                    Container(\r\n                      child: Row(\r\n                        children: [\r\n                          const Text(\r\n                            \"Cooking Duration: \",\r\n                            style: TextStyle(fontSize: 20, color: Colors.white),\r\n                          ),\r\n                          const SizedBox(\r\n                            width: 15,\r\n                          ),\r\n\r\n                          IconButton(\r\n\r\n                            color: Colors.white,\r\n                            icon: const Icon(Icons.timer, size: 35,),\r\n\r\n                            onPressed: () async {\r\n\r\n\r\n\r\n                              Duration? selectedDuration = await showDurationPicker(context: context, initialTime: const Duration(minutes: 0));\r\n\r\n                              ScaffoldMessenger.of(context).showSnackBar(\r\n                                SnackBar(content: Text('Duration is: $selectedDuration')),\r\n                              );\r\n\r\n                              setState(() {\r\n                                steps_model.cooking_duration = selectedDuration.toString();\r\n                              });\r\n\r\n\r\n\r\n                            },\r\n\r\n\r\n                          ),\r\n\r\n                        ],\r\n                      ),\r\n                    ),\r\n\r\n                    const SizedBox(\r\n                      height: 20,\r\n                    ),\r\n\r\n\r\n                    /*ElevatedButton(\r\n                        onPressed: () async{\r\n                          Duration? selectedDuration = await showDurationPicker(context: context, initialTime: const Duration(minutes: 0));\r\n\r\n                          ScaffoldMessenger.of(context).showSnackBar(\r\n                            SnackBar(content: Text('Duration is: $selectedDuration')),\r\n                          );\r\n\r\n                        },\r\n                        child: const Text(\"Pick Duration\")\r\n\r\n                    ),*/\r\n\r\n                    /*const Align(\r\n                      alignment: Alignment.bottomLeft,\r\n                      child: Text(\r\n                        'Duration: $selectedDuration',\r\n                        style: TextStyle(fontSize: 20, fontWeight: FontWeight.normal, color: Colors.white),\r\n                      ),\r\n                    ),*/\r\n\r\n\r\n\r\n                    const SizedBox(\r\n                      height: 10,\r\n                    ),\r\n\r\n                    /*const Align(\r\n                      alignment: Alignment.bottomLeft,\r\n                      child: Text(\r\n                        selectedDuration,\r\n                        style: TextStyle(fontSize: 20, fontWeight: FontWeight.normal, color: Colors.white),\r\n                      ),\r\n                    ),*/\r\n\r\n                    //Rohit code\r\n                    // const Align(\r\n                    //   alignment: Alignment.bottomLeft,\r\n                    //   child: Text(\r\n                    //     \"cooking_steps: \",\r\n                    //     style: TextStyle(fontSize: 20, fontWeight: FontWeight.normal, color: Colors.white),\r\n                    //   ),\r\n                    // ),\r\n\r\n\r\n\r\n                    \r\n                    //Rohit Code\r\n\r\n                    //\r\n                    // const SizedBox(\r\n                    //   height: 10,\r\n                    // ),\r\n                    //\r\n                    // ListView.separated(\r\n                    //     shrinkWrap: true,\r\n                    //     physics: const ScrollPhysics(),\r\n                    //     itemBuilder: (context, index){\r\n                    //       return Column(\r\n                    //         children: [_cooking_steps(index)],\r\n                    //       );\r\n                    //     },\r\n                    //     separatorBuilder: (context, index)=> const Divider(),\r\n                    //     itemCount: steps_model.cooking_steps!.length\r\n                    // ),\r\n                    \r\n                    \r\n\r\n                    const SizedBox(\r\n                      height: 20,\r\n\r\n                    ),\r\n\r\n\r\n\r\n                    /*Container(\r\n                      child: Row(\r\n                        children: [\r\n                          const Text(\r\n                            \"Upload Image: \",\r\n                            style: TextStyle(fontSize: 20, color: Colors.white),\r\n                          ),\r\n                          const SizedBox(\r\n                            width: 15,\r\n                          ),\r\n\r\n\r\n                          IconButton(\r\n\r\n                            color: Colors.white,\r\n                            icon: const Icon(Icons.file_upload, size: 35,),\r\n\r\n                            onPressed: () { uploadImage(); },\r\n                          ),\r\n\r\n                        ],\r\n                      ),\r\n                    ),*/\r\n\r\n                    SizedBox(\r\n                      height: 10,\r\n                    ),\r\n\r\n                    /*file != null ?\r\n                    Image.file(\r\n                        file!,\r\n                        height: 150,\r\n                        width: 150,\r\n                        fit: BoxFit.cover)\r\n                        : FlutterLogo(size: 150,),*/\r\n\r\n                    SizedBox(\r\n                      height: 40,\r\n                    ),\r\n\r\n\r\n                    //Calling own widget\r\n                    _uiWidget(),\r\n\r\n\r\n\r\n\r\n\r\n                  ],\r\n                ),\r\n\r\n              ),\r\n            ),\r\n\r\n          ],\r\n        ),\r\n      ),\r\n\r\n    );\r\n  }\r\n\r\n  _getFromGallery() async {\r\n    PickedFile? pickedFile = await ImagePicker().getImage(\r\n      source: ImageSource.gallery,\r\n      maxWidth: 1800,\r\n      maxHeight: 1800,\r\n    );\r\n    if (pickedFile != null) {\r\n      File imageFile = File(pickedFile.path);\r\n    }\r\n  }\r\n\r\n  Future uploadImage() async{\r\n\r\n    //pick image from gallery\r\n    //install file_picker package and import necessary library\r\n    ImagePicker imagePicker = ImagePicker();\r\n    final file = (await  imagePicker.pickImage(source: ImageSource.gallery));\r\n    //XFile? image = await  imagePicker.pickImage(source: ImageSource.gallery);\r\n\r\n    if(file==null) return;\r\n\r\n    //Added Later\r\n    final imageTemporary = File(file.path);\r\n    setState(() => this.file = imageTemporary);\r\n    //End\r\n\r\n    String uniqueFileName = DateTime.now().millisecondsSinceEpoch.toString();\r\n\r\n    //upload picked image in firestore\r\n    //install firebase_storage package and import necessary library\r\n\r\n    //get a reference to storage\r\n    Reference referenceroot = FirebaseStorage.instance.ref();\r\n    Reference referenceDirImages = referenceroot.child('images');\r\n\r\n    //create reference for the image to be stored\r\n    Reference referenceImageToUpload = referenceDirImages.child(uniqueFileName);\r\n\r\n    //store image\r\n    //error handeling\r\n    try{\r\n\r\n      await referenceImageToUpload.putFile(File(file!.path));\r\n      steps_model.image_url = await referenceImageToUpload.getDownloadURL();\r\n\r\n    } catch(e){print(e);}\r\n\r\n\r\n  }\r\n\r\n  Future<void> addRecipe() {\r\n\r\n    if(steps_model.image_url!.isEmpty){\r\n      ScaffoldMessenger.of(context)\r\n          .showSnackBar(SnackBar(content: Text('Upload Image')));\r\n    }\r\n\r\n    return recipeDetails\r\n        .add({\r\n      /*'Title': recipe_title,\r\n      'Number of Servings': num_of_servings,\r\n      'Ingredients': ingredients,\r\n      'Direction': steps_model.toJson(),\r\n      'Image': image_url,\r\n      'Posted By':loggedInUser.name,*/\r\n      //'Time taken': selectedDuration\r\n      'Details': steps_model.toJson(),\r\n      'Posted By':user?.uid,\r\n    })\r\n        .then((value) => print(\"Posted\"))\r\n        .catchError((error) => print(\"Failed to add Recipe: $error\"));\r\n  }\r\n\r\n  Widget _uiWidget(){\r\n    return new Form(\r\n      key: globalKey,\r\n      child: SingleChildScrollView(\r\n        child: Padding(\r\n          padding: EdgeInsets.all(0),\r\n          child: Column(\r\n            crossAxisAlignment: CrossAxisAlignment.start,\r\n            mainAxisAlignment: MainAxisAlignment.start,\r\n            children: [\r\n              // FormHelper.inputFieldWidgetWithLabel(context,\r\n              //     \"username\",\r\n              //     \"Username\",\r\n              //     \"username\",\r\n              //     (onValidateVal){\r\n              //   if(onValidateVal.isEmpty){\r\n              //     return \"Cannot be empty\";\r\n              //   }\r\n              //   return null;\r\n              //     },\r\n              //     (onSavedVal){\r\n              //   this.steps_model.cooking_steps = onSavedVal;\r\n              //     },\r\n              //   borderColor: Colors.redAccent,\r\n              //   borderFocusColor: Colors.redAccent,\r\n              //   borderRadius: 2,\r\n              //   fontSize: 14,\r\n              //   labelFontSize: 16,\r\n              // ),\r\n\r\n              _ingredientsContainer(),\r\n\r\n              SizedBox(\r\n                height: 50,\r\n              ),\r\n\r\n              _directionContainer(),\r\n\r\n              const SizedBox(\r\n                height: 15,\r\n              ),\r\n\r\n              //Post Recipe Button\r\n              Center(\r\n                child: FormHelper.submitButton(\r\n                    btnColor: Colors.green,\r\n                    borderColor: Colors.green,\r\n\r\n                    \"Post Recipe\",\r\n                        () {\r\n                      if(validateAndSave()){\r\n                        print(steps_model.toJson());\r\n                        addRecipe();\r\n                      }\r\n                    }\r\n                ),\r\n              ),\r\n\r\n              SizedBox(\r\n                height: 50,\r\n              ),\r\n\r\n            ],\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n\r\n  Widget _directionContainer(){\r\n    return Column(\r\n      crossAxisAlignment: CrossAxisAlignment.start,\r\n      mainAxisAlignment: MainAxisAlignment.start,\r\n      children: [\r\n        Padding(\r\n          padding: const EdgeInsets.all(5),\r\n          child: Text(\r\n            \"Directions\",\r\n            textAlign: TextAlign.left,\r\n            style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),\r\n          ),\r\n        ),\r\n\r\n        //stepContainerUI(0)\r\n\r\n        ListView.separated(\r\n            shrinkWrap: true,\r\n            physics: const ScrollPhysics(),\r\n            itemBuilder: (context, index){\r\n              return Column(\r\n                children: [\r\n                  stepContainerUI(index),\r\n                ],\r\n              );\r\n            },\r\n            separatorBuilder: (contex, index)=> const Divider(),\r\n            itemCount: steps_model.cooking_steps!.length)\r\n\r\n      ],\r\n    );\r\n\r\n  }\r\n\r\n  Widget stepContainerUI(index){\r\n    return Padding(padding: EdgeInsets.all(5),\r\n      child: Row(\r\n        children: [\r\n          Flexible(child:\r\n          FormHelper.inputFieldWidget(context,\r\n            \"step_$index\",\r\n            \"Add Directions:\",\r\n            textColor: Colors.white,\r\n                (onValidateVal){\r\n              if(onValidateVal.isEmpty){\r\n                return \"Cannot ${index + 1} be empty\";\r\n              }\r\n              return null;\r\n            },\r\n                (onSavedVal){\r\n              this.steps_model.cooking_steps![index] = onSavedVal;\r\n            },\r\n            borderColor: Colors.white,\r\n            borderFocusColor: Colors.white,\r\n            borderRadius: 2,\r\n            fontSize: 14,\r\n            hintColor: Colors.white,\r\n          ),),\r\n\r\n          Visibility(child:\r\n          SizedBox(\r\n            width:35 ,\r\n            child: IconButton(\r\n              icon: Icon(Icons.add_circle, color: Colors.green,),\r\n              onPressed: () {\r\n                addStepControl();\r\n              },\r\n\r\n            ),\r\n          ),\r\n            visible: index == steps_model.cooking_steps!.length-1,\r\n          ),\r\n\r\n          Visibility(child:\r\n          SizedBox(\r\n            width:35 ,\r\n            child: IconButton(\r\n              icon: Icon(Icons.remove_circle, color: Colors.redAccent,),\r\n              onPressed: () {\r\n                removeStepControl(index);\r\n              },\r\n\r\n            ),\r\n          ),\r\n            visible: index > 0,\r\n          ),\r\n\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n\r\n  void addStepControl(){\r\n    setState(() {\r\n      steps_model.cooking_steps!.add(\"\");\r\n    });\r\n  }\r\n\r\n  void removeStepControl(index){\r\n    setState(() {\r\n      if(steps_model.cooking_steps!.length > 1){\r\n        steps_model.cooking_steps!.removeAt(index);\r\n      }\r\n    });\r\n  }\r\n\r\n  //Ingredients Widget\r\n  Widget _ingredientsContainer(){\r\n    return Column(\r\n      crossAxisAlignment: CrossAxisAlignment.start,\r\n      mainAxisAlignment: MainAxisAlignment.start,\r\n      children: [\r\n        Padding(\r\n          padding: const EdgeInsets.all(10.0),\r\n          child: Text(\r\n            \"Ingredients\",\r\n            textAlign: TextAlign.left,\r\n            style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),\r\n          ),\r\n        ),\r\n\r\n        //stepContainerUI(0)\r\n\r\n        ListView.separated(\r\n            shrinkWrap: true,\r\n            physics: const ScrollPhysics(),\r\n            itemBuilder: (context, index){\r\n              return Column(\r\n                children: [\r\n                  stepContainerUI_ingredients(index),\r\n                ],\r\n              );\r\n            },\r\n            separatorBuilder: (contex, index)=> const Divider(),\r\n            itemCount: steps_model.recipe_ingredients!.length)\r\n\r\n      ],\r\n    );\r\n\r\n  }\r\n\r\n  Widget stepContainerUI_ingredients(index){\r\n    return Padding(padding: EdgeInsets.all(10),\r\n      child: Row(\r\n        children: [\r\n          Flexible(child:\r\n          FormHelper.inputFieldWidget(context,\r\n            \"step_$index\",\r\n            \"Add Ingredients:\",\r\n            textColor: Colors.white,\r\n                (onValidateVal){\r\n              if(onValidateVal.isEmpty){\r\n                return \"Cannot ${index + 1} be empty\";\r\n              }\r\n              return null;\r\n            },\r\n                (onSavedVal){\r\n              this.steps_model.recipe_ingredients![index] = onSavedVal;\r\n            },\r\n            borderColor: Colors.white,\r\n            borderFocusColor: Colors.white,\r\n            borderRadius: 2,\r\n            fontSize: 14,\r\n            hintColor: Colors.white,\r\n          ),),\r\n\r\n          Visibility(child:\r\n          SizedBox(\r\n            width:35 ,\r\n            child: IconButton(\r\n              icon: Icon(Icons.add_circle, color: Colors.green,),\r\n              onPressed: () {\r\n                addStepControl_ingredients();\r\n              },\r\n\r\n            ),\r\n          ),\r\n            visible: index == steps_model.recipe_ingredients!.length-1,\r\n          ),\r\n\r\n          Visibility(child:\r\n          SizedBox(\r\n            width:35 ,\r\n            child: IconButton(\r\n              icon: Icon(Icons.remove_circle, color: Colors.redAccent,),\r\n              onPressed: () {\r\n                removeStepControl_ingredients(index);\r\n              },\r\n\r\n            ),\r\n          ),\r\n            visible: index > 0,\r\n          ),\r\n\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n\r\n  void addStepControl_ingredients(){\r\n    setState(() {\r\n      steps_model.recipe_ingredients!.add(\"\");\r\n    });\r\n  }\r\n\r\n  void removeStepControl_ingredients(index){\r\n    setState(() {\r\n      if(steps_model.recipe_ingredients!.length > 1){\r\n        steps_model.recipe_ingredients!.removeAt(index);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  bool validateAndSave(){\r\n    final form = globalKey.currentState;\r\n    if(form!.validate()){\r\n      form.save();\r\n      return true;\r\n    }\r\n    else{\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  //Rohit Codes\r\n  // Widget _cooking_steps(index){\r\n  //   //var index;\r\n  //   return Padding(\r\n  //     padding: EdgeInsets.all(0),\r\n  //\r\n  //     child: Row(\r\n  //       children: [\r\n  //         Flexible(\r\n  //           child: FormHelper.inputFieldWidget(\r\n  //             textColor: Colors.white,\r\n  //\r\n  //             context,\r\n  //             \"steps_$index\",\r\n  //             \"\",\r\n  //                 (onValidate){\r\n  //               if(onValidate.isEmpty){\r\n  //                 return 'Step ${index +1} cannot be empty!!!';\r\n  //               }\r\n  //\r\n  //               return null;\r\n  //             },\r\n  //                 (onSavedVal){\r\n  //               steps_model.cooking_steps![index] = onSavedVal;\r\n  //             },\r\n  //             borderColor: Colors.white,\r\n  //             borderFocusColor: Colors.white,\r\n  //             borderRadius: 0,\r\n  //             fontSize: 16,\r\n  //\r\n  //\r\n  //           ),\r\n  //         ),\r\n  //\r\n  //         Visibility(\r\n  //           child: IconButton(\r\n  //             icon: Icon(\r\n  //               Icons.add_circle,\r\n  //               color: Colors.lightGreenAccent,\r\n  //               size: 30,\r\n  //             ),\r\n  //             onPressed: (){addSteps();},\r\n  //           ),\r\n  //           visible: index == steps_model.cooking_steps!.length -1,\r\n  //         ),\r\n  //\r\n  //\r\n  //\r\n  //\r\n  //         Visibility(\r\n  //           child: IconButton(\r\n  //             icon: Icon(\r\n  //               Icons.remove_circle,\r\n  //               color: Colors.redAccent,\r\n  //               size: 30,\r\n  //             ),\r\n  //             onPressed: (){removeSteps(index);},\r\n  //           ),\r\n  //           visible: index > 0,\r\n  //         ),\r\n  //\r\n  //\r\n  //       ],\r\n  //     ),\r\n  //\r\n  //\r\n  //   );\r\n  // }\r\n  //\r\n  //\r\n  // void addSteps(){\r\n  //   setState(() {\r\n  //     steps_model.cooking_steps!.add(\"\");\r\n  //   });\r\n  // }\r\n  //\r\n  // void removeSteps(index){\r\n  //   setState(() {\r\n  //     if(steps_model.cooking_steps!.length > 1){\r\n  //\r\n  //       steps_model.cooking_steps!.removeAt(index);\r\n  //     }\r\n  //   });\r\n  //\r\n  // }\r\n  //\r\n  // bool validateAndSave(){\r\n  //   final form = globalKey.currentState;\r\n  //   if(form!.validate()){\r\n  //     form.save();\r\n  //     return true;\r\n  //   }\r\n  //   else{\r\n  //     return false;\r\n  //   }\r\n  // }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cook_book/lib/app/PostRecipe/post_recipe.dart b/cook_book/lib/app/PostRecipe/post_recipe.dart
--- a/cook_book/lib/app/PostRecipe/post_recipe.dart	(revision 5015588603951ebfa4cdaac6d4a02d6477ad179d)
+++ b/cook_book/lib/app/PostRecipe/post_recipe.dart	(date 1672384298215)
@@ -14,7 +14,7 @@
 import 'package:snippet_coder_utils/FormHelper.dart';
 import 'package:file_picker/file_picker.dart';
 
-import 'cookingSteps_model.dart';
+import '../../model/cookingSteps_model.dart';
 
 class PostRecipe extends StatefulWidget {
   const PostRecipe({Key? key}) : super(key: key);
Index: cook_book/lib/app/MyProfile/myProfile.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\nimport 'package:cloud_firestore/cloud_firestore.dart';\r\nimport 'package:cook_book/app/MyProfile/profileDetail.dart';\r\nimport 'package:cook_book/custom/CustomListView/recipeListView.dart';\r\nimport 'package:firebase_auth/firebase_auth.dart';\r\nimport 'package:flutter/material.dart';\r\nimport '../../custom/CustomGridView/savedGridView.dart';\r\nimport '../../model/user_model.dart';\r\n\r\nclass MyProfile extends StatefulWidget {\r\n  const MyProfile({Key? key}) : super(key: key);\r\n\r\n  @override\r\n  State<MyProfile> createState() => _MyProfileState();\r\n}\r\n\r\nclass _MyProfileState extends State<MyProfile> {\r\n  UserModel loggedInUser = UserModel();\r\n  User? user = FirebaseAuth.instance.currentUser;\r\n\r\n  Future _getData() async => await FirebaseFirestore.instance\r\n      .collection(\"users\")\r\n      .doc(user?.uid)\r\n      .get()\r\n      .then((value)=> {\r\n\r\n    loggedInUser = UserModel.fromMap(value.data()),\r\n    print(loggedInUser!.name),\r\n\r\n  });\r\n\r\n  @override\r\n  void initState() {\r\n    super.initState();\r\n    _getData();\r\n  }\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    var size = MediaQuery.of(context).size;\r\n    return Scaffold(\r\n      appBar: PreferredSize(\r\n        preferredSize: Size.fromHeight(30),\r\n        child: AppBar(\r\n          leading: Icon(Icons.arrow_back, color: Colors.white,),\r\n          elevation: 0,\r\n          backgroundColor: Color(0xFF01231C),\r\n          title: Text(loggedInUser.username ?? \"username\"),\r\n        ),\r\n      ),\r\n      body: Container(\r\n        height: size.height,\r\n        width: size.width,\r\n        decoration: BoxDecoration(\r\n            gradient: LinearGradient(\r\n                begin: Alignment.topCenter,\r\n                end: Alignment.bottomCenter,\r\n                tileMode: TileMode.clamp,\r\n                colors: [\r\n                  Color(0xFF01231C).withOpacity(1),\r\n                  Color(0xFF131926).withOpacity(0.9),\r\n                  //Color(0xFF0E2839).withOpacity(0.5),\r\n                  Color(0xFF081017).withOpacity(0.8),\r\n                ]\r\n            ),\r\n        ),\r\n        child: DefaultTabController(\r\n          length: 2,\r\n          child: Padding(\r\n            padding: const EdgeInsets.all(10),\r\n            child: NestedScrollView(\r\n              headerSliverBuilder: (BuildContext context, bool innerBoxIsScrolled) {\r\n                return[\r\n                  SliverList(delegate: SliverChildListDelegate([\r\n                    ProfileDetail(),\r\n                  ]),)\r\n                ];\r\n              },\r\n              body: SizedBox(\r\n                width: size.width,\r\n                //height: 1000,\r\n                child: DecoratedBox(\r\n                  decoration: BoxDecoration(\r\n                    gradient: LinearGradient(\r\n                        begin: Alignment.topLeft,\r\n                        end: Alignment.bottomRight,\r\n                        colors: [\r\n                          Color(0xFF555555).withOpacity(0.2),\r\n                          Color(0xFF7A7A7A).withOpacity(0.05),\r\n                        ]\r\n\r\n                    ),\r\n                    borderRadius: BorderRadius.all(Radius.circular(30)),\r\n                    border: Border.all(color: Colors.white, width: 2),\r\n                  ),\r\n                  child: Padding(\r\n                    padding: const EdgeInsets.symmetric(horizontal: 5, vertical: 5),\r\n                    child: Column(\r\n                      children: [\r\n                        TabBar(\r\n                          labelColor: Colors.white,\r\n                          unselectedLabelColor: Colors.blueGrey,\r\n                          indicatorWeight: 1,\r\n                          indicatorColor: Colors.white,\r\n                          tabs: [\r\n                            Tab(\r\n                              child: Text(\"Recipes\", style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),),\r\n                            ),\r\n                            Tab(\r\n                              child: Text(\"Saved\", style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),),\r\n                            ),\r\n                          ],\r\n                        ),\r\n                        Expanded(\r\n                          child: TabBarView(\r\n                              children: [\r\n                                Recipe(),\r\n                                Saved(),\r\n                              ]),\r\n                        ),\r\n                      ],\r\n                    ),\r\n                  ),\r\n\r\n                ),\r\n              ),\r\n\r\n\r\n            ),\r\n          ),\r\n\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cook_book/lib/app/MyProfile/myProfile.dart b/cook_book/lib/app/MyProfile/myProfile.dart
--- a/cook_book/lib/app/MyProfile/myProfile.dart	(revision 5015588603951ebfa4cdaac6d4a02d6477ad179d)
+++ b/cook_book/lib/app/MyProfile/myProfile.dart	(date 1672390267685)
@@ -2,6 +2,7 @@
 import 'package:cloud_firestore/cloud_firestore.dart';
 import 'package:cook_book/app/MyProfile/profileDetail.dart';
 import 'package:cook_book/custom/CustomListView/recipeListView.dart';
+import 'package:cook_book/model/cookingSteps_model.dart';
 import 'package:firebase_auth/firebase_auth.dart';
 import 'package:flutter/material.dart';
 import '../../custom/CustomGridView/savedGridView.dart';
@@ -15,7 +16,7 @@
 }
 
 class _MyProfileState extends State<MyProfile> {
-  UserModel loggedInUser = UserModel();
+  /*UserModel loggedInUser = UserModel();
   User? user = FirebaseAuth.instance.currentUser;
 
   Future _getData() async => await FirebaseFirestore.instance
@@ -27,12 +28,35 @@
     loggedInUser = UserModel.fromMap(value.data()),
     print(loggedInUser!.name),
 
-  });
+  });*/
+
+  //Variables
+  var name;
+  var username;
+  var description;
+  var profilePicture;
+  CollectionReference recipeReference =FirebaseFirestore.instance.collection("recipe_details") ;
+
+  //Get user data from firebase
+  void _getUserDetails() async{
+    final user = await FirebaseAuth.instance.currentUser;
+    //UserModel loggedInUser = UserModel();
+    //CookingStepsModel recipeList = new CookingStepsModel();
+    var _userDetails = await FirebaseFirestore.instance.collection('users').doc(user?.uid).get();
+
+    setState(() {
+      name = _userDetails.data()!['name'];
+      username = _userDetails.data()!['username'];
+      description = _userDetails.data()!['description'];
+      profilePicture = _userDetails.data()!['profilePicture'];
+    });
+  }
 
   @override
   void initState() {
+    _getUserDetails();
     super.initState();
-    _getData();
+    //_getData();
   }
   @override
   Widget build(BuildContext context) {
@@ -44,7 +68,7 @@
           leading: Icon(Icons.arrow_back, color: Colors.white,),
           elevation: 0,
           backgroundColor: Color(0xFF01231C),
-          title: Text(loggedInUser.username ?? "username"),
+          title: Text(username ?? "username"),
         ),
       ),
       body: Container(
@@ -71,7 +95,7 @@
               headerSliverBuilder: (BuildContext context, bool innerBoxIsScrolled) {
                 return[
                   SliverList(delegate: SliverChildListDelegate([
-                    ProfileDetail(),
+                    ProfileDetail(name: name, description: description, profilePicture: profilePicture, username: username),
                   ]),)
                 ];
               },
@@ -89,11 +113,11 @@
                         ]
 
                     ),
-                    borderRadius: BorderRadius.all(Radius.circular(30)),
+                    borderRadius: BorderRadius.all(Radius.circular(20)),
                     border: Border.all(color: Colors.white, width: 2),
                   ),
                   child: Padding(
-                    padding: const EdgeInsets.symmetric(horizontal: 5, vertical: 5),
+                    padding: const EdgeInsets.symmetric(horizontal: 5, vertical: 10),
                     child: Column(
                       children: [
                         TabBar(
@@ -103,17 +127,28 @@
                           indicatorColor: Colors.white,
                           tabs: [
                             Tab(
-                              child: Text("Recipes", style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),),
+                              height: 50,
+                              child: Column(
+                                children: [
+                                  Icon(Icons.food_bank_outlined, size: 30,),
+                                  Text("Recipes", style: TextStyle(fontSize: 14, fontWeight: FontWeight.bold),),
+                                ],
+                              ),
                             ),
                             Tab(
-                              child: Text("Saved", style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),),
+                              child: Column(
+                                children: [
+                                  Icon(Icons.bookmark_border_outlined, size: 30,),
+                                  Text("Saved", style: TextStyle(fontSize: 14, fontWeight: FontWeight.bold),),
+                                ],
+                              ),
                             ),
                           ],
                         ),
                         Expanded(
                           child: TabBarView(
                               children: [
-                                Recipe(),
+                                Recipe(reference: recipeReference),
                                 Saved(),
                               ]),
                         ),
Index: cook_book/lib/custom/CustomListView/recipeListView.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:flutter/material.dart';\r\nimport 'package:like_button/like_button.dart';\r\n\r\nimport '../CustomButtons/likebutton.dart';\r\n\r\n\r\nclass Recipe extends StatelessWidget {\r\n  const Recipe({Key? key}) : super(key: key);\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    var size = MediaQuery.of(context).size;\r\n    /*return SizedBox(\r\n        width: size.width/2.5,\r\n\r\n        child: Card(\r\n          elevation: 2,\r\n          child: Padding(\r\n            padding: const EdgeInsets.all(0),\r\n            child: Column(\r\n              children: [\r\n\r\n\r\n                Container(\r\n                  color: Colors.grey,\r\n                  height: 200,width: 300,\r\n                  child: Image.network(\"https://img.freepik.com/premium-photo/tobacco-whole-chicken-plate-with-herbs-tomato-black-background-top-view-copy-space_89816-31697.jpg?w=2000\", height: 200, width: 300,),\r\n                ),\r\n                // const SizedBox(width: 8,),\r\n                const Text(\"Hello\"),\r\n                const Text(\"Bye\"),\r\n\r\n\r\n\r\n\r\n              ],\r\n            ),\r\n          ),\r\n        )\r\n    );*/\r\n    return ListView.builder(\r\n      primary: true,\r\n      shrinkWrap: true,\r\n      scrollDirection: Axis.vertical,\r\n      itemCount: 80,\r\n      itemBuilder: (context, position){\r\n\r\n      return Padding(\r\n        padding: const EdgeInsets.only(bottom: 10, left:1, right: 1),\r\n        child: Container(\r\n          height: 100,\r\n          width: size.width,\r\n\r\n          decoration: BoxDecoration(\r\n            borderRadius: BorderRadius.circular(10),\r\n            color: Colors.white,\r\n            image: DecorationImage(\r\n              image: NetworkImage(\"https://img.freepik.com/premium-photo/half-grilled-chicken-plate-black-background-top-view-copy-space_89816-10440.jpg?w=2000\",),\r\n              fit: BoxFit.cover,\r\n            )\r\n          ),\r\n          child: Stack(\r\n            children: [\r\n              Positioned(\r\n                left: 10,\r\n                top: 10,\r\n                  child: Column(\r\n                    mainAxisAlignment: MainAxisAlignment.start,\r\n                    children: [\r\n                      Text(\"Fried Chicken\", style: TextStyle(color: Colors.white, fontSize: 14, fontWeight: FontWeight.bold),),\r\n                      Text(\"Time: 1hrs 30min\", style: TextStyle(color: Colors.white),),\r\n                    ],\r\n                  ),\r\n              ),\r\n              Positioned(\r\n                right: 10,\r\n                bottom: 10,\r\n                //child: Text(\"Bye\", style: TextStyle(color: Colors.white),),\r\n                child: Likes_Button(),\r\n              )\r\n            ],\r\n          ),\r\n\r\n        ),\r\n      );\r\n    },\r\n    );\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cook_book/lib/custom/CustomListView/recipeListView.dart b/cook_book/lib/custom/CustomListView/recipeListView.dart
--- a/cook_book/lib/custom/CustomListView/recipeListView.dart	(revision 5015588603951ebfa4cdaac6d4a02d6477ad179d)
+++ b/cook_book/lib/custom/CustomListView/recipeListView.dart	(date 1672390754927)
@@ -5,39 +5,15 @@
 
 
 class Recipe extends StatelessWidget {
-  const Recipe({Key? key}) : super(key: key);
+
+  var reference;
+
+  Recipe({super.key, required this.reference});
+
 
   @override
   Widget build(BuildContext context) {
     var size = MediaQuery.of(context).size;
-    /*return SizedBox(
-        width: size.width/2.5,
-
-        child: Card(
-          elevation: 2,
-          child: Padding(
-            padding: const EdgeInsets.all(0),
-            child: Column(
-              children: [
-
-
-                Container(
-                  color: Colors.grey,
-                  height: 200,width: 300,
-                  child: Image.network("https://img.freepik.com/premium-photo/tobacco-whole-chicken-plate-with-herbs-tomato-black-background-top-view-copy-space_89816-31697.jpg?w=2000", height: 200, width: 300,),
-                ),
-                // const SizedBox(width: 8,),
-                const Text("Hello"),
-                const Text("Bye"),
-
-
-
-
-              ],
-            ),
-          ),
-        )
-    );*/
     return ListView.builder(
       primary: true,
       shrinkWrap: true,
@@ -66,6 +42,7 @@
                 top: 10,
                   child: Column(
                     mainAxisAlignment: MainAxisAlignment.start,
+                    crossAxisAlignment: CrossAxisAlignment.start,
                     children: [
                       Text("Fried Chicken", style: TextStyle(color: Colors.white, fontSize: 14, fontWeight: FontWeight.bold),),
                       Text("Time: 1hrs 30min", style: TextStyle(color: Colors.white),),
Index: cook_book/lib/app/MyProfile/profileDetail.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:cloud_firestore/cloud_firestore.dart';\r\nimport 'package:firebase_auth/firebase_auth.dart';\r\nimport 'package:flutter/material.dart';\r\n\r\nimport '../../model/user_model.dart';\r\nimport '../EditProfile/btnEditProfile.dart';\r\nimport '../../custom/ExpandedWidgets/expandedProfileDescription.dart';\r\n\r\nclass ProfileDetail extends StatefulWidget {\r\n  ProfileDetail({Key? key}) : super(key: key);\r\n\r\n  @override\r\n  State<ProfileDetail> createState() => _ProfileDetailState();\r\n}\r\n\r\nclass _ProfileDetailState extends State<ProfileDetail> {\r\n  User? user = FirebaseAuth.instance.currentUser;\r\n  UserModel loggedInUser = UserModel();\r\n\r\n  //var name;\r\n  // var username;\r\n  // var description;\r\n\r\n  /*void _getProfileDetails() async{\r\n    final user = await FirebaseAuth.instance.currentUser;\r\n    UserModel loggedInUser = UserModel();\r\n    var _userDetails = await FirebaseFirestore.instance.collection('users').doc(user?.uid).get();\r\n    setState(() {\r\n      name = _userDetails.data()!['name'];\r\n      username = _userDetails.data()!['email'];\r\n      description = _userDetails.data()!['description'];\r\n    });\r\n  }*/\r\n\r\n  Future _getData() async => await FirebaseFirestore.instance\r\n      .collection(\"users\")\r\n      .doc(user?.uid)\r\n      .get()\r\n      .then((value)=> {\r\n\r\n    loggedInUser = UserModel.fromMap(value.data()),\r\n    print(loggedInUser!.name),\r\n\r\n  });\r\n\r\n  @override\r\n  void initState() {\r\n    //_getProfileDetails();\r\n    super.initState();\r\n    _getData();\r\n  }\r\n\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    var size = MediaQuery.of(context).size;\r\n    return Column(\r\n      children: [\r\n\r\n            Row(\r\n              children: [\r\n                Container(\r\n                  height: size.width/2.7,\r\n                  width: size.width/2.7,\r\n\r\n                  decoration: BoxDecoration(\r\n                    shape: BoxShape.circle,\r\n                    border: Border.all(color: Colors.white, width: 2),\r\n                    image:\r\n                    loggedInUser.profilePicture != null ?\r\n                    DecorationImage(\r\n                      image: NetworkImage(loggedInUser.profilePicture!),\r\n                      fit: BoxFit.fill,\r\n                    )\r\n                    : DecorationImage(\r\n                      image: NetworkImage(\"https://st3.depositphotos.com/3935465/12919/i/950/depositphotos_129194616-stock-photo-avocado-tomato-and-arugula-salad.jpg\"),\r\n                      fit: BoxFit.fill,\r\n                    ),\r\n                  ),\r\n                  //child: Image.network(\"https://media.istockphoto.com/id/1190330112/photo/fried-pork-and-vegetables-on-white-background.jpg?s=612x612&w=0&k=20&c=TzvLLGGvPAmxhKJ6fz91UGek-zLNNCh4iq7MVWLnFwo=\",fit: BoxFit.fill,)\r\n                ),\r\n                //SizedBox(width: size.width*0.05,),\r\n                Expanded(\r\n                  child: Padding(\r\n                    padding: const EdgeInsets.only(top: 40),\r\n                    child: Column(\r\n                      crossAxisAlignment: CrossAxisAlignment.start,\r\n                      children: [\r\n\r\n\r\n                        Row(\r\n                          children: [\r\n                            SizedBox(width: size.width*0.05,),\r\n                            Column(\r\n                              crossAxisAlignment: CrossAxisAlignment.start,\r\n                              children: [\r\n\r\n                                Text(loggedInUser.name??\"Your name here.\",\r\n                                  style: TextStyle(color: Colors.white, fontSize: 16, fontWeight: FontWeight.bold),\r\n                                ),\r\n                                Padding(\r\n                                  padding: EdgeInsets.only(top: 5),\r\n                                  child: Text(loggedInUser.username ?? \"Your username here.\",\r\n                                    style: TextStyle(color: Colors.grey, fontSize: 14, fontWeight: FontWeight.bold),\r\n                                  ),\r\n                                ),\r\n                              ],\r\n                            ),\r\n                          ],\r\n                        ),\r\n                        SizedBox(height: size.height*0.01,),\r\n                        Row(\r\n                          children: [\r\n                            SizedBox(width: size.width*0.03,),\r\n                            Expanded(child: FollowButton(btnHeight: 35, btnWidth: 60, number: \"100K\", name: \"Followers\")),\r\n                            SizedBox(width: size.width*0.02,),\r\n                            Expanded(child: FollowButton(btnHeight: 35, btnWidth: 60, number: \"100K\", name: \"Following\")),\r\n                          ],\r\n                        ),\r\n                        Padding(\r\n                          padding: const EdgeInsets.only(top: 10),\r\n                          child: Row(\r\n                            children: [\r\n                              Expanded(child: BtnEditProfile()),\r\n                              SizedBox(width: size.width*0.02,),\r\n                              InkWell(\r\n                                onTap: (){\r\n\r\n                                },\r\n                                  child: Icon(Icons.settings, color: Colors.white, size: 30,)\r\n                              ),\r\n\r\n                            ],\r\n                          ),\r\n                        )\r\n                      ],\r\n                    ),\r\n                  ),\r\n                ),\r\n\r\n              ],\r\n            ),\r\n\r\n            SizedBox(height: size.height*0.01,),\r\n\r\n            // ---------------Profile Description\r\n            Row(\r\n              children: [\r\n                Expanded(\r\n                  child:\r\n                  loggedInUser.description != null ?\r\n                  ExpandedProfileDescription(profileDescription: loggedInUser.description!)\r\n                      :SizedBox(height: 20,),\r\n                ),\r\n\r\n              ],\r\n\r\n            ),\r\n\r\n            SizedBox(height: size.height*0.01,),\r\n\r\n      ],\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nclass FollowButton extends StatelessWidget {\r\n  //const Button({Key? key}) : super(key: key);\r\n\r\n  final double btnHeight;\r\n  final double btnWidth;\r\n  final String number;\r\n  final String name;\r\n\r\n  const FollowButton({required this.btnHeight, required this.btnWidth, required this.number, required this.name});\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Container(\r\n      height: btnHeight,\r\n      width: btnWidth,\r\n\r\n      decoration: BoxDecoration(\r\n        color: Color(0xFF1B6E13),\r\n        borderRadius: BorderRadius.circular(30),\r\n\r\n      ),\r\n      child: Column(\r\n        mainAxisAlignment: MainAxisAlignment.center,\r\n        children: [\r\n          Text(number, style: TextStyle(fontSize: 14, fontWeight: FontWeight.bold, color: Colors.white),),\r\n          Text(name, style: TextStyle(fontSize: 12, color: Colors.white),),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cook_book/lib/app/MyProfile/profileDetail.dart b/cook_book/lib/app/MyProfile/profileDetail.dart
--- a/cook_book/lib/app/MyProfile/profileDetail.dart	(revision 5015588603951ebfa4cdaac6d4a02d6477ad179d)
+++ b/cook_book/lib/app/MyProfile/profileDetail.dart	(date 1672390074877)
@@ -6,50 +6,15 @@
 import '../EditProfile/btnEditProfile.dart';
 import '../../custom/ExpandedWidgets/expandedProfileDescription.dart';
 
-class ProfileDetail extends StatefulWidget {
-  ProfileDetail({Key? key}) : super(key: key);
-
-  @override
-  State<ProfileDetail> createState() => _ProfileDetailState();
-}
+class ProfileDetail extends StatelessWidget {
 
-class _ProfileDetailState extends State<ProfileDetail> {
-  User? user = FirebaseAuth.instance.currentUser;
-  UserModel loggedInUser = UserModel();
+  //Variables
+  var name;
+  var username;
+  var description;
+  var profilePicture;
 
-  //var name;
-  // var username;
-  // var description;
-
-  /*void _getProfileDetails() async{
-    final user = await FirebaseAuth.instance.currentUser;
-    UserModel loggedInUser = UserModel();
-    var _userDetails = await FirebaseFirestore.instance.collection('users').doc(user?.uid).get();
-    setState(() {
-      name = _userDetails.data()!['name'];
-      username = _userDetails.data()!['email'];
-      description = _userDetails.data()!['description'];
-    });
-  }*/
-
-  Future _getData() async => await FirebaseFirestore.instance
-      .collection("users")
-      .doc(user?.uid)
-      .get()
-      .then((value)=> {
-
-    loggedInUser = UserModel.fromMap(value.data()),
-    print(loggedInUser!.name),
-
-  });
-
-  @override
-  void initState() {
-    //_getProfileDetails();
-    super.initState();
-    _getData();
-  }
-
+  ProfileDetail({super.key, required this.name, required this.username, required this.description, required this.profilePicture});
 
   @override
   Widget build(BuildContext context) {
@@ -67,9 +32,10 @@
                     shape: BoxShape.circle,
                     border: Border.all(color: Colors.white, width: 2),
                     image:
-                    loggedInUser.profilePicture != null ?
+                    //loggedInUser.profilePicture != null ?
+                    profilePicture != null ?
                     DecorationImage(
-                      image: NetworkImage(loggedInUser.profilePicture!),
+                      image: NetworkImage(profilePicture!),
                       fit: BoxFit.fill,
                     )
                     : DecorationImage(
@@ -82,7 +48,7 @@
                 //SizedBox(width: size.width*0.05,),
                 Expanded(
                   child: Padding(
-                    padding: const EdgeInsets.only(top: 40),
+                    padding: const EdgeInsets.only(top: 20),
                     child: Column(
                       crossAxisAlignment: CrossAxisAlignment.start,
                       children: [
@@ -95,12 +61,12 @@
                               crossAxisAlignment: CrossAxisAlignment.start,
                               children: [
 
-                                Text(loggedInUser.name??"Your name here.",
+                                Text(name??"Your name here.",
                                   style: TextStyle(color: Colors.white, fontSize: 16, fontWeight: FontWeight.bold),
                                 ),
                                 Padding(
                                   padding: EdgeInsets.only(top: 5),
-                                  child: Text(loggedInUser.username ?? "Your username here.",
+                                  child: Text(username ?? "Your username here.",
                                     style: TextStyle(color: Colors.grey, fontSize: 14, fontWeight: FontWeight.bold),
                                   ),
                                 ),
@@ -118,7 +84,7 @@
                           ],
                         ),
                         Padding(
-                          padding: const EdgeInsets.only(top: 10),
+                          padding: const EdgeInsets.only(top: 5),
                           child: Row(
                             children: [
                               Expanded(child: BtnEditProfile()),
@@ -148,8 +114,8 @@
               children: [
                 Expanded(
                   child:
-                  loggedInUser.description != null ?
-                  ExpandedProfileDescription(profileDescription: loggedInUser.description!)
+                  description != null ?
+                  ExpandedProfileDescription(profileDescription: description!)
                       :SizedBox(height: 20,),
                 ),
 
@@ -164,8 +130,6 @@
   }
 }
 
-
-
 class FollowButton extends StatelessWidget {
   //const Button({Key? key}) : super(key: key);
 
diff --git a/cook_book/lib/app/PostRecipe/cookingSteps_model.dart b/cook_book/lib/model/cookingSteps_model.dart
rename from cook_book/lib/app/PostRecipe/cookingSteps_model.dart
rename to cook_book/lib/model/cookingSteps_model.dart
